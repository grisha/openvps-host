#!/usr/bin/env python2.3

#
# Copyright 2004 OpenHosting, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# $Id: ohbwidth,v 1.7 2004/12/03 19:18:25 grisha Exp $

"""
This script periodically collects data about vserver
bandwidth utilization and updates the corresponding RRD's
with RRDTool
"""

import commands
import os
import sys
from syslog import syslog, openlog

from oh.host import cfg
from oh.host import vsutil

openlog('ohbwidth')

def iptables_info():

    input = {}

    cmd = '/sbin/iptables -xvnL INPUT | grep 0.0.0.0/0'
    s = commands.getoutput(cmd)

    for line in s.splitlines():
        x = line.split()
        bytes, ip = x[1], x[-1]
        input[ip] = bytes

    output = {}

    cmd = '/sbin/iptables -xvnL OUTPUT | grep 0.0.0.0/0'
    s = commands.getoutput(cmd)

    for line in s.splitlines():
        x = line.split()
        bytes, ip = x[1], x[-2]
        output[ip] = bytes

    return input, output

# main starts here

if not vsutil.is_vserver_kernel():
    sys.exit()

input, output = iptables_info()

vservers = vsutil.list_vservers()

for server in vservers:

    if vservers[server]['interfaces']:

        i, o = 0, 0
            
        for ifc in vservers[server]['interfaces']:

            # ignore non eth0 or dummy0 traffic
            if ifc['dev'] not in ['eth0', 'dummy0']:
                continue

            ip = ifc['ip']
            
            if input.has_key(ip):
                i += int(input[ip])
            else:
                syslog('WARNING: No iptables INPUT rule exist for ip %s of %s' % (ip, server))
            
            if output.has_key(ip):
                o += int(output[ip])
            else:
                syslog('WARNING: No iptables OUTPUT rule exist for ip %s of %s' % (ip, server))

        # now update rrd

        rrd = os.path.join(cfg.VAR_DB_OH, '%s.rrd' % server)

        if os.path.exists(rrd):

            cmd = '%s update %s N:%s:%s' % (cfg.RRDTOOL, rrd, i, o)
            s = commands.getoutput(cmd)

        else:
            syslog('WARNING: No rrd (%s) exists for %s' % (rrd, server))


###
# do not edit this if you like using emacs
# makes emacs go into python mode
### Local Variables:
### mode:python
### End:
